/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CowswapOrderApprover,
  CowswapOrderApproverInterface,
} from "../../OrderApprover.sol/CowswapOrderApprover";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract GPv2Signing",
        name: "_signing",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "sellToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "buyToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "validTo",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "feeAmountBP",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "kind",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "partiallyFillable",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "sellTokenBalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "buyTokenBalance",
        type: "bytes32",
      },
    ],
    name: "approveOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signing",
    outputs: [
      {
        internalType: "contract GPv2Signing",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161063a38038061063a83398101604081905261002f916100aa565b6001600160a01b03811660808190526040805163f698da2560e01b8152905163f698da25916004808201926020929091908290030181865afa158015610079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009d91906100da565b60a052503060c0526100f3565b6000602082840312156100bc57600080fd5b81516001600160a01b03811681146100d357600080fd5b9392505050565b6000602082840312156100ec57600080fd5b5051919050565b60805160a05160c05161050c61012e60003960008181609e0152610170015260006102130152600081816040015261028e015261050c6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638302757a1461003b57806395eae6961461007e575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009161008c366004610386565b610093565b005b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101055760405162461bcd60e51b815260206004820152601160248201527044454c454741544543414c4c206f6e6c7960781b60448201526064015b60405180910390fd5b6040805161018081018252600060e082018190526101008201819052610120820181905261014082018190526101608201526001600160a01b038c811682528b811660208301523092820192909252606081018a90526080810189905263ffffffff881660a08201527f000000000000000000000000000000000000000000000000000000000000000090911660c08201526127106101a4878b61042a565b6101ae9190610457565b60e0820152610100810185905283151561012082015261014081018390526101608101829052601f19810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040805161190160f01b81527f000000000000000000000000000000000000000000000000000000000000000060028201526022810192909252604290912081516038808252606082019093529091600091906020820181803683370190505090506102778183308660a00151610307565b60405163ec6cb13f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ec6cb13f906102c6908490600190600401610479565b600060405180830381600087803b1580156102e057600080fd5b505af11580156102f4573d6000803e3d6000fd5b5050505050505050505050505050505050565b60388451146103585760405162461bcd60e51b815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f770000000000000060448201526064016100fc565b60388401526034830152602090910152565b80356001600160a01b038116811461038157600080fd5b919050565b6000806000806000806000806000806101408b8d0312156103a657600080fd5b6103af8b61036a565b99506103bd60208c0161036a565b985060408b0135975060608b0135965060808b013563ffffffff811681146103e457600080fd5b955060a08b0135945060c08b0135935060e08b0135801515811461040757600080fd5b809350506101008b013591506101208b013590509295989b9194979a5092959850565b600081600019048311821515161561045257634e487b7160e01b600052601160045260246000fd5b500290565b60008261047457634e487b7160e01b600052601260045260246000fd5b500490565b604081526000835180604084015260005b818110156104a7576020818701810151606086840101520161048a565b818111156104b9576000606083860101525b50921515602083015250601f91909101601f19160160600191905056fea2646970667358221220be6e320b4cf1058a825ca399aaa9dc78a56f09b9a4e56c12d439bfa5824ded6464736f6c634300080c0033";

type CowswapOrderApproverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CowswapOrderApproverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CowswapOrderApprover__factory extends ContractFactory {
  constructor(...args: CowswapOrderApproverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signing: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CowswapOrderApprover> {
    return super.deploy(
      _signing,
      overrides || {}
    ) as Promise<CowswapOrderApprover>;
  }
  override getDeployTransaction(
    _signing: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signing, overrides || {});
  }
  override attach(address: string): CowswapOrderApprover {
    return super.attach(address) as CowswapOrderApprover;
  }
  override connect(signer: Signer): CowswapOrderApprover__factory {
    return super.connect(signer) as CowswapOrderApprover__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CowswapOrderApproverInterface {
    return new utils.Interface(_abi) as CowswapOrderApproverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CowswapOrderApprover {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CowswapOrderApprover;
  }
}
